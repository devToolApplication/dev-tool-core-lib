spring:
  jackson:
    time-zone: ${TIME_ZONE:UTC}
  application:
    name: ${APP_NAME:dev-tool-core-lib}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9092}

    topic:
      partitions: ${KAFKA_TOPIC_NOTIFICATION_PARTITIONS:3}
      replicas: ${KAFKA_TOPIC_NOTIFICATION_REPLICAS:1}

    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:dev-tool-2}
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

      # Cấu hình batch rõ ràng hơn
      max-poll-records: ${KAFKA_MAX_POLL_RECORDS:100}               # Số lượng record tối đa mỗi lần poll

    listener:
      concurrency: ${KAFKA_LISTENER_CONCURRENCY:3}
      type: batch                        # Lắng nghe theo batch
      ack-mode: manual_immediate        # Thủ công, commit ngay lập tức

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: ${KAFKA_PRODUCER_ACKS:all}
      retries: ${KAFKA_PRODUCER_RETRIES:3}
#      batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:16384}             # 16KB
#      buffer-memory: ${KAFKA_PRODUCER_BUFFER_MEMORY:33554432}    # 32MB
#      linger-ms: ${KAFKA_PRODUCER_LINGER_MS:5}                   # chờ 5ms để gom batch

    properties:
      security.protocol: SASL_PLAINTEXT  # hoặc SASL_SSL nếu server dùng SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: >
          org.apache.kafka.common.security.plain.PlainLoginModule required
          username="${KAFKA_USERNAME}"
          password="${KAFKA_PASSWORD}";

      max.request.size: ${KAFKA_PRODUCER_MAX_REQUEST_SIZE:1048576} # 1MB

      # Cấu hình Kafka consumer native cho batch
#      fetch.min.bytes: ${KAFKA_FETCH_MIN_BYTES:1024}              # gom ít nhất 1KB mới gửi về
#      fetch.max.bytes: ${KAFKA_FETCH_MAX_BYTES:5242880}           # tối đa 5MB
#      fetch.max.wait.ms: ${KAFKA_FETCH_MAX_WAIT_MS:100}           # chờ tối đa 100ms để gom batch


  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:https://keycloak.103.77.243.66.nip.io/realms/develop_tool_realm}
          token-uri: ${OAUTH2_TOKEN_URI:https://keycloak.103.77.243.66.nip.io/realms/develop_tool_realm/protocol/openid-connect/token}
    public-routes:
      - "/v1/public/**"
      - "/swagger-ui/**"
      - "/v3/api-docs/**"
    cors-allow-url:
      - ${CORS_ALLOW_URL_1:http://localhost:3000}
      - ${CORS_ALLOW_URL_2:http://localhost:8080}
      - ${CORS_ALLOW_URL_3:http://localhost:8081}
      - ${CORS_ALLOW_URL_4:http://localhost:8082}
      - ${CORS_ALLOW_URL_5:http://localhost:8083}
      - ${CORS_ALLOW_URL_6:http://localhost:8084}
      - ${CORS_ALLOW_URL_7:http://localhost:8085}
    clients:
      allowed:
        - ${SECURITY_CLIENT_ALLOWED:}
    scopes:
      read:
        - ${SECURITY_SCOPE_READ:}
      write:
        - ${SECURITY_SCOPE_WRITE:}
      delete:
        - ${SECURITY_SCOPE_DELETE:}
      update:
        - ${SECURITY_SCOPE_UPDATE:}

  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017}
      database: ${MONGODB_DATABASE:mydb}

    redis:
      prefix: ${REDIS_PREFIX:app}
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      username: ${REDIS_USERNAME:default}
      password: ${REDIS_PASSWORD:}
      timeout: ${REDIS_TIMEOUT:30000}

  web:
    pageable:
      default-page-size: ${PAGE_SIZE_DEFAULT:10}
      max-page-size: ${PAGE_SIZE_MAX:100}
      one-indexed-parameters: ${PAGE_ONE_INDEXED:true}
      default:
        sort: createdAt,DESC
        size: 10

feign:
  client:
    config:
      default:
        connect-timeout: ${FEIGN_CONNECT_TIMEOUT:30000}
        read-timeout: ${FEIGN_READ_TIMEOUT:30000}

rest-template:
  client:
    config:
      default:
        connect-timeout: ${REST_CONNECT_TIMEOUT:30000}
        read-timeout: ${REST_READ_TIMEOUT:30000}

springdoc:
  title: ${SPRINGDOC_TITLE:"MOS Core API"}
  description: ${SPRINGDOC_DESCRIPTION:"Core library providing common services and utilities"}
  version: ${SPRINGDOC_VERSION:"1.0.0"}
  contact:
    name: ${SPRINGDOC_CONTACT_NAME:"MOS Dev Team"}
    email: ${SPRINGDOC_CONTACT_EMAIL:"support@mos.vn"}
  license:
    name: ${SPRINGDOC_LICENSE_NAME:"MIT"}
    url: ${SPRINGDOC_LICENSE_URL:"https://opensource.org/licenses/MIT"}

logging:
  level:
    vn.mos.core: ${LOG_LEVEL:INFO}
    org.apache.kafka: ${LOG_LEVEL:INFO}

server:
  port: ${SERVER_PORT:8081}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
