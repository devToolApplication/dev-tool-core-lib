pipeline {
    agent any

    environment {
        IMAGE_NAME = "lamld2510/core-lib"
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_REGISTRY = "docker.io"
        CACHE_REPO = "lamld2510/core-lib-cache" // repo để lưu cache layer
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-jenkins', url: 'https://github.com/devToolApplication/dev-tool-core-lib.git'
            }
        }

        stage('Build & Push with Kaniko (with cache)') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    // tạo file config.json dùng để login Docker registry
                    writeFile file: 'kaniko-secret.json', text: """
                    {
                      "auths": {
                        "https://index.docker.io/v1/": {
                          "auth": "${DOCKER_USER}:${DOCKER_PASS}"
                        }
                      }
                    }
                    """

                    sh '''
                    mkdir -p /kaniko/.docker
                    cat kaniko-secret.json | base64 > /kaniko/.docker/config.json
                    base64 -d /kaniko/.docker/config.json > /kaniko/.docker/config.json.decoded
                    mv /kaniko/.docker/config.json.decoded /kaniko/.docker/config.json
                    '''

                    container(name: 'kaniko', shell: '/busybox/sh') {
                        sh '''#!/busybox/sh
                        /kaniko/executor \
                          --dockerfile=Dockerfile \
                          --context=`pwd` \
                          --destination=$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
                          --destination=$DOCKER_REGISTRY/$IMAGE_NAME:latest \
                          --cache=true \
                          --cache-repo=$DOCKER_REGISTRY/$CACHE_REPO \
                          --insecure \
                          --skip-tls-verify \
                          --verbosity=info
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-credential-id', variable: 'KUBECONFIG')]) {
                    sh """
                    kubectl --kubeconfig=$KUBECONFIG set image deployment/core-lib core-lib=$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG -n your-namespace
                    """
                }
            }
        }
    }

    post {
        always {
            sh 'rm -f kaniko-secret.json'
        }
    }
}
